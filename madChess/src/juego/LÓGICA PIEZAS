Opción Lógica de piezas 1:

	[LAS CASILLAS TIENEN PIEZAS]
	
	- En la clase partida se llama a VentanaJuego, esta a Tablero
	- Geteamos tablero como un atributo de la clase Partida
	
	- Guardamos las casillas en una variable casillas (HECHO)
	
	- Una función que loadea las casillas iniciales con las piezas-->  (HECHO)
			pieza = new Pieza(nombre, url, etc)
		EJ : loadInitCasilla(casillas[0],pieza)
		
		Cuando un jugador clicka en una pieza se muestra un listado de casillas adyacentes disponibles teniendo en cuenta los movimientos de la pieza
		
		, al mover la pieza a una de esas casillas se retrivea la casilla padre y se setea la pieza como null, mientras que en la nueva casilla de llegada se guarda la piezaActial
		
		
		
		
[PARTE DOS  MOVIMIENTOS DE LAS PIEZAS]


	- La idea es la siguiente desde el tablero , queremos saber en que Casillas puede dejarse una pieza al empezar el dragging
	- Se lo pediriamos con un método a la pieza --> getCasillasDisponibles(); --> returnea un ArrayList con las casillas posibles
	- Por cada casilla disponible la iluminamos con un método casilla.setPosibleMove()
	- Si al dejar la pieza la casilla final es una de este arraylist entonces se queda , en caso contrario se devuelve a la casilla de salida
	
	[getCasillasDisponibles()]
	
	para hcaer este método podríamos pasarle a las piezas una arrayList con todas las casillas
	- Encontramos la casilla actual (a la que llamamos) en este arraylist y si por ejemplo la pieza se pueder  a la de al lado seria el index + 1
	- Añadimos esa casilla al arrayList de returneo,
	de esta manera podemos hacer condiciones como por ejemplo si dentro de la casilla hay una pieza entonces añade la casilla (como en el caso de los peones [diagonal])
	